{
  "documentationUrl": "https://meta.stoplight.io/docs/spectral/docs/reference/openapi-rules.md",
  "formats": ["oas2", "oas3"],
  "functions": [
    "oasDocumentSchema",
    "oasSchema",
    "oasExample",
    "oasOpSuccessResponse",
    "oasOpFormDataConsumeCheck",
    "oasOpIdUnique",
    "oasOpParams",
    "oasOpSecurityDefined",
    "oasPathParam",
    "oasTagDefined",
    "oasUnusedComponent",
    "typedEnum",
    "refSiblings"
  ],
  "rules": {
    "operation-success-response": {
      "description": "Operation must have at least one `2xx` or `3xx` response.",
      "recommended": true,
      "type": "style",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "responses",
        "function": "oasOpSuccessResponse"
      }
    },
    "oas2-operation-formData-consume-check": {
      "description": "Operations with an `in: formData` parameter must include `application/x-www-form-urlencoded` or `multipart/form-data` in their `consumes` property.",
      "recommended": true,
      "formats": ["oas2"],
      "type": "validation",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "function": "oasOpFormDataConsumeCheck"
      }
    },
    "operation-operationId-unique": {
      "description": "Every operation must have a unique `operationId`.",
      "recommended": true,
      "type": "validation",
      "severity": 0,
      "given": "$",
      "then": {
        "function": "oasOpIdUnique"
      }
    },
    "operation-parameters": {
      "description": "Operation parameters are unique and non-repeating.",
      "message": "{{error}}",
      "recommended": true,
      "type": "validation",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )].parameters",
      "then": {
        "function": "oasOpParams"
      }
    },
    "operation-tag-defined": {
      "description": "Operation tags should be defined in global tags.",
      "recommended": true,
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasTagDefined"
      }
    },
    "path-params": {
      "description": "Path parameters should be defined and valid.",
      "message": "{{error}}",
      "type": "validation",
      "severity": 0,
      "recommended": true,
      "given": "$",
      "then": {
        "function": "oasPathParam"
      }
    },
    "contact-properties": {
      "description": "Contact object should have `name`, `url` and `email`.",
      "recommended": false,
      "type": "style",
      "given": "$.info.contact",
      "then": [
        {
          "field": "name",
          "function": "truthy"
        },
        {
          "field": "url",
          "function": "truthy"
        },
        {
          "field": "email",
          "function": "truthy"
        }
      ]
    },
    "duplicated-entry-in-enum": {
      "description": "Enum values should not have duplicate entry.",
      "type": "validation",
      "severity": "warn",
      "recommended": true,
      "message": "A duplicated entry in the enum was found. Error: {{error}}",
      "given": "$..enum",
      "then": {
        "function": "oasSchema",
        "functionOptions": {
          "schema": {
            "oneOf": [
              {
                "type": "array",
                "uniqueItems": true
              },
              {
                "not": {
                  "type": "array"
                }
              }
            ]
          }
        }
      }
    },
    "info-contact": {
      "description": "Info object should contain `contact` object.",
      "recommended": true,
      "type": "style",
      "given": "$",
      "then": {
        "field": "info.contact",
        "function": "truthy"
      }
    },
    "info-description": {
      "description": "OpenAPI object info `description` must be present and non-empty string.",
      "recommended": true,
      "type": "style",
      "given": "$",
      "then": {
        "field": "info.description",
        "function": "truthy"
      }
    },
    "info-license": {
      "description": "OpenAPI object `info` should contain a `license` object.",
      "recommended": false,
      "type": "style",
      "given": "$",
      "then": {
        "field": "info.license",
        "function": "truthy"
      }
    },
    "license-url": {
      "description": "License object should include `url`.",
      "recommended": false,
      "type": "style",
      "given": "$",
      "then": {
        "field": "info.license.url",
        "function": "truthy"
      }
    },
    "no-eval-in-markdown": {
      "description": "Markdown descriptions should not contain `eval(`.",
      "recommended": true,
      "type": "style",
      "given": "$..[?(@property === 'description' || @property === 'title')]",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "eval\\("
        }
      }
    },
    "no-script-tags-in-markdown": {
      "description": "Markdown descriptions should not contain `<script>` tags.",
      "recommended": true,
      "type": "style",
      "given": "$..[?(@property === 'description' || @property === 'title')]",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "<script"
        }
      }
    },
    "openapi-tags-alphabetical": {
      "description": "OpenAPI object should have alphabetical `tags`.",
      "recommended": false,
      "type": "style",
      "given": "$",
      "then": {
        "field": "tags",
        "function": "alphabetical",
        "functionOptions": {
          "keyedBy": "name"
        }
      }
    },
    "openapi-tags": {
      "description": "OpenAPI object should have non-empty `tags` array.",
      "recommended": false,
      "type": "style",
      "given": "$",
      "then": {
        "field": "tags",
        "function": "schema",
        "functionOptions": {
          "dialect": "draft7",
          "schema": {
            "type": "array",
            "minItems": 1
          }
        }
      }
    },
    "operation-description": {
      "description": "Operation `description` must be present and non-empty string.",
      "recommended": true,
      "type": "style",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "description",
        "function": "truthy"
      }
    },
    "operation-operationId": {
      "description": "Operation should have an `operationId`.",
      "recommended": true,
      "type": "style",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "operationId",
        "function": "truthy"
      }
    },
    "operation-operationId-valid-in-url": {
      "description": "operationId may only use characters that are valid when used in a URL.",
      "recommended": true,
      "type": "validation",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "operationId",
        "function": "pattern",
        "functionOptions": {
          "match": "^[A-Za-z0-9-._~:/?#\\[\\]@!\\$&'()*+,;=]*$"
        }
      }
    },
    "operation-singular-tag": {
      "description": "Operation may only have one tag.",
      "recommended": false,
      "type": "style",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "tags",
        "function": "length",
        "functionOptions": {
          "max": 1
        }
      }
    },
    "operation-tags": {
      "description": "Operation should have non-empty `tags` array.",
      "recommended": true,
      "type": "style",
      "given": "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]",
      "then": {
        "field": "tags",
        "function": "truthy"
      }
    },
    "path-declarations-must-exist": {
      "description": "Path parameter declarations cannot be empty, ex.`/given/{}` is invalid.",
      "recommended": true,
      "type": "style",
      "given": "$.paths",
      "then": {
        "field": "@key",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "{}"
        }
      }
    },
    "path-keys-no-trailing-slash": {
      "description": "paths should not end with a slash.",
      "recommended": true,
      "type": "style",
      "given": "$.paths",
      "then": {
        "field": "@key",
        "function": "pattern",
        "functionOptions": {
          "notMatch": ".+\\/$"
        }
      }
    },
    "path-not-include-query": {
      "description": "given keys should not include a query string.",
      "recommended": true,
      "type": "style",
      "given": "$.paths",
      "then": {
        "field": "@key",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "\\?"
        }
      }
    },
    "tag-description": {
      "description": "Tag object should have a `description`.",
      "recommended": false,
      "type": "style",
      "given": "$.tags[*]",
      "then": {
        "field": "description",
        "function": "truthy"
      }
    },
    "no-$ref-siblings": {
      "description": "Property cannot be placed among $ref",
      "message": "{{error}}",
      "type": "validation",
      "severity": 0,
      "recommended": true,
      "resolved": false,
      "given": "$..[?(@property === '$ref')]",
      "then": {
        "function": "refSiblings"
      }
    },
    "typed-enum": {
      "description": "Enum values should respect the specified type.",
      "message": "{{error}}",
      "recommended": true,
      "type": "validation",
      "given": "$..[?(@.enum && @.type)]",
      "then": {
        "function": "typedEnum"
      }
    },
    "oas2-api-host": {
      "description": "OpenAPI `host` must be present and non-empty string.",
      "recommended": true,
      "formats": ["oas2"],
      "type": "style",
      "given": "$",
      "then": {
        "field": "host",
        "function": "truthy"
      }
    },
    "oas2-api-schemes": {
      "description": "OpenAPI host `schemes` must be present and non-empty array.",
      "recommended": true,
      "formats": ["oas2"],
      "type": "style",
      "given": "$",
      "then": {
        "field": "schemes",
        "function": "schema",
        "functionOptions": {
          "dialect": "draft7",
          "schema": {
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        }
      }
    },
    "oas2-host-not-example": {
      "description": "Host URL should not point at example.com.",
      "recommended": false,
      "formats": ["oas2"],
      "given": "$",
      "type": "style",
      "then": {
        "field": "host",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "example\\.com"
        }
      }
    },
    "oas2-host-trailing-slash": {
      "description": "Server URL should not have a trailing slash.",
      "recommended": true,
      "formats": ["oas2"],
      "given": "$",
      "type": "style",
      "then": {
        "field": "host",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "/$"
        }
      }
    },
    "oas2-parameter-description": {
      "description": "Parameter objects should have a `description`.",
      "recommended": false,
      "formats": ["oas2"],
      "given": "$..parameters[?(@.in)]",
      "type": "style",
      "then": {
        "field": "description",
        "function": "truthy"
      }
    },
    "oas2-operation-security-defined": {
      "description": "Operation `security` values must match a scheme defined in the `securityDefinitions` object.",
      "recommended": true,
      "formats": ["oas2"],
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasOpSecurityDefined",
        "functionOptions": {
          "schemesPath": ["securityDefinitions"]
        }
      }
    },
    "oas2-valid-schema-example": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "recommended": true,
      "formats": ["oas2"],
      "severity": 0,
      "type": "validation",
      "given": [
        "$..definitions..[?(@property !== 'properties' && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]",
        "$..parameters..[?(@property !== 'properties' && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]",
        "$..responses..[?(@property !== 'properties' && (@.example !== void 0 || @['x-example'] !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
      ],
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "schemaField": "$",
          "oasVersion": 2,
          "type": "schema"
        }
      }
    },
    "oas2-valid-media-example": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "recommended": true,
      "formats": ["oas2"],
      "severity": 0,
      "type": "validation",
      "given": "$..responses..[?(@.schema && @.examples)]",
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "schemaField": "schema",
          "oasVersion": 2,
          "type": "media"
        }
      }
    },
    "oas2-anyOf": {
      "description": "OpenAPI v3 keyword `anyOf` detected in OpenAPI v2 document.",
      "message": "anyOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "recommended": true,
      "formats": ["oas2"],
      "type": "validation",
      "given": "$..anyOf",
      "then": {
        "function": "undefined"
      }
    },
    "oas2-oneOf": {
      "description": "OpenAPI v3 keyword `oneOf` detected in OpenAPI v2 document.",
      "message": "oneOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "recommended": true,
      "formats": ["oas2"],
      "type": "validation",
      "given": "$..oneOf",
      "then": {
        "function": "undefined"
      }
    },
    "oas2-schema": {
      "description": "Validate structure of OpenAPI v2 specification.",
      "message": "{{error}}.",
      "recommended": true,
      "formats": ["oas2"],
      "severity": 0,
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasDocumentSchema",
        "functionOptions": {
          "allErrors": true,
          "schema": {
            "title": "A JSON Schema for Swagger 2.0 API.",
            "$id": "http://swagger.io/v2/schema.json#",
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": ["swagger", "info", "paths"],
            "additionalProperties": false,
            "patternProperties": {
              "^x-": {
                "$ref": "#/definitions/vendorExtension"
              }
            },
            "properties": {
              "swagger": {
                "type": "string",
                "enum": ["2.0"],
                "description": "The Swagger version of this document."
              },
              "info": {
                "$ref": "#/definitions/info"
              },
              "host": {
                "type": "string",
                "pattern": "^[^{}/ :\\\\]+(?::\\d+)?$",
                "description": "The host (name or ip) of the API. Example: 'swagger.io'"
              },
              "basePath": {
                "type": "string",
                "pattern": "^/",
                "description": "The base path to the API. Example: '/api'."
              },
              "schemes": {
                "$ref": "#/definitions/schemesList"
              },
              "consumes": {
                "description": "A list of MIME types accepted by the API.",
                "allOf": [
                  {
                    "$ref": "#/definitions/mediaTypeList"
                  }
                ]
              },
              "produces": {
                "description": "A list of MIME types the API can produce.",
                "allOf": [
                  {
                    "$ref": "#/definitions/mediaTypeList"
                  }
                ]
              },
              "paths": {
                "$ref": "#/definitions/paths"
              },
              "definitions": {
                "$ref": "#/definitions/definitions"
              },
              "parameters": {
                "$ref": "#/definitions/parameterDefinitions"
              },
              "responses": {
                "$ref": "#/definitions/responseDefinitions"
              },
              "security": {
                "$ref": "#/definitions/security"
              },
              "securityDefinitions": {
                "$ref": "#/definitions/securityDefinitions"
              },
              "tags": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/tag"
                },
                "uniqueItems": true
              },
              "externalDocs": {
                "$ref": "#/definitions/externalDocs"
              }
            },
            "definitions": {
              "info": {
                "type": "object",
                "description": "General information about the API.",
                "required": ["version", "title"],
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "A unique and precise title of the API."
                  },
                  "version": {
                    "type": "string",
                    "description": "A semantic version number of the API."
                  },
                  "description": {
                    "type": "string",
                    "description": "A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed."
                  },
                  "termsOfService": {
                    "type": "string",
                    "description": "The terms of service for the API."
                  },
                  "contact": {
                    "$ref": "#/definitions/contact"
                  },
                  "license": {
                    "$ref": "#/definitions/license"
                  }
                }
              },
              "contact": {
                "type": "object",
                "description": "Contact information for the owners of the API.",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifying name of the contact person/organization."
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL pointing to the contact information.",
                    "format": "uri"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the contact person/organization.",
                    "format": "email"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "license": {
                "type": "object",
                "required": ["name"],
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the license type. It's encouraged to use an OSI compatible license."
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL pointing to the license.",
                    "format": "uri"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "paths": {
                "type": "object",
                "description": "Relative paths to the individual endpoints. They must be relative to the 'basePath'.",
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  },
                  "^/": {
                    "$ref": "#/definitions/pathItem"
                  }
                },
                "additionalProperties": false
              },
              "definitions": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/schema"
                },
                "description": "One or more JSON objects describing the schemas being consumed and produced by the API."
              },
              "parameterDefinitions": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/parameter"
                },
                "description": "One or more JSON representations for parameters"
              },
              "responseDefinitions": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/response"
                },
                "description": "One or more JSON representations for responses"
              },
              "externalDocs": {
                "type": "object",
                "additionalProperties": false,
                "description": "information about external documentation",
                "required": ["url"],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "examples": {
                "type": "object",
                "additionalProperties": true
              },
              "mimeType": {
                "type": "string",
                "description": "The MIME type of the HTTP message."
              },
              "operation": {
                "type": "object",
                "required": ["responses"],
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "uniqueItems": true
                  },
                  "summary": {
                    "type": "string",
                    "description": "A brief summary of the operation."
                  },
                  "description": {
                    "type": "string",
                    "description": "A longer description of the operation, GitHub Flavored Markdown is allowed."
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/externalDocs"
                  },
                  "operationId": {
                    "type": "string",
                    "description": "A unique identifier of the operation."
                  },
                  "produces": {
                    "description": "A list of MIME types the API can produce.",
                    "allOf": [
                      {
                        "$ref": "#/definitions/mediaTypeList"
                      }
                    ]
                  },
                  "consumes": {
                    "description": "A list of MIME types the API can consume.",
                    "allOf": [
                      {
                        "$ref": "#/definitions/mediaTypeList"
                      }
                    ]
                  },
                  "parameters": {
                    "$ref": "#/definitions/parametersList"
                  },
                  "responses": {
                    "$ref": "#/definitions/responses"
                  },
                  "schemes": {
                    "$ref": "#/definitions/schemesList"
                  },
                  "deprecated": {
                    "type": "boolean",
                    "default": false
                  },
                  "security": {
                    "$ref": "#/definitions/security"
                  }
                }
              },
              "pathItem": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "$ref": {
                    "type": "string"
                  },
                  "get": {
                    "$ref": "#/definitions/operation"
                  },
                  "put": {
                    "$ref": "#/definitions/operation"
                  },
                  "post": {
                    "$ref": "#/definitions/operation"
                  },
                  "delete": {
                    "$ref": "#/definitions/operation"
                  },
                  "options": {
                    "$ref": "#/definitions/operation"
                  },
                  "head": {
                    "$ref": "#/definitions/operation"
                  },
                  "patch": {
                    "$ref": "#/definitions/operation"
                  },
                  "parameters": {
                    "$ref": "#/definitions/parametersList"
                  }
                }
              },
              "responses": {
                "type": "object",
                "description": "Response objects names can either be any valid HTTP status code or 'default'.",
                "minProperties": 1,
                "additionalProperties": false,
                "patternProperties": {
                  "^([0-9]{3})$|^(default)$": {
                    "$ref": "#/definitions/responseValue"
                  },
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "not": {
                  "type": "object",
                  "additionalProperties": false,
                  "patternProperties": {
                    "^x-": {
                      "$ref": "#/definitions/vendorExtension"
                    }
                  }
                }
              },
              "responseValue": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/response"
                  },
                  {
                    "$ref": "#/definitions/jsonReference"
                  }
                ]
              },
              "response": {
                "type": "object",
                "required": ["description"],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/schema"
                      },
                      {
                        "$ref": "#/definitions/fileSchema"
                      }
                    ]
                  },
                  "headers": {
                    "$ref": "#/definitions/headers"
                  },
                  "examples": {
                    "$ref": "#/definitions/examples"
                  }
                },
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/header"
                }
              },
              "header": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "integer", "boolean", "array"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormat"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "vendorExtension": {
                "description": "Any property starting with x- is valid.",
                "additionalProperties": true,
                "additionalItems": true
              },
              "bodyParameter": {
                "type": "object",
                "required": ["name", "in", "schema"],
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the parameter."
                  },
                  "in": {
                    "type": "string",
                    "description": "Determines the location of the parameter.",
                    "enum": ["body"]
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Determines whether or not this parameter is required or optional.",
                    "default": false
                  },
                  "schema": {
                    "$ref": "#/definitions/schema"
                  }
                },
                "additionalProperties": false
              },
              "headerParameterSubSchema": {
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "required": {
                    "type": "boolean",
                    "description": "Determines whether or not this parameter is required or optional.",
                    "default": false
                  },
                  "in": {
                    "type": "string",
                    "description": "Determines the location of the parameter.",
                    "enum": ["header"]
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the parameter."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "boolean", "integer", "array"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormat"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  }
                }
              },
              "queryParameterSubSchema": {
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "required": {
                    "type": "boolean",
                    "description": "Determines whether or not this parameter is required or optional.",
                    "default": false
                  },
                  "in": {
                    "type": "string",
                    "description": "Determines the location of the parameter.",
                    "enum": ["query"]
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the parameter."
                  },
                  "allowEmptyValue": {
                    "type": "boolean",
                    "default": false,
                    "description": "allows sending a parameter by name only or with an empty value."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "boolean", "integer", "array"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormatWithMulti"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  }
                }
              },
              "formDataParameterSubSchema": {
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "required": {
                    "type": "boolean",
                    "description": "Determines whether or not this parameter is required or optional.",
                    "default": false
                  },
                  "in": {
                    "type": "string",
                    "description": "Determines the location of the parameter.",
                    "enum": ["formData"]
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the parameter."
                  },
                  "allowEmptyValue": {
                    "type": "boolean",
                    "default": false,
                    "description": "allows sending a parameter by name only or with an empty value."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "boolean", "integer", "array", "file"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormatWithMulti"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  }
                }
              },
              "pathParameterSubSchema": {
                "additionalProperties": false,
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "required": ["required"],
                "properties": {
                  "required": {
                    "type": "boolean",
                    "enum": [true],
                    "description": "Determines whether or not this parameter is required or optional."
                  },
                  "in": {
                    "type": "string",
                    "description": "Determines the location of the parameter.",
                    "enum": ["path"]
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the parameter."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "boolean", "integer", "array"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormat"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  }
                }
              },
              "nonBodyParameter": {
                "type": "object",
                "required": ["name", "in", "type"],
                "oneOf": [
                  {
                    "$ref": "#/definitions/headerParameterSubSchema"
                  },
                  {
                    "$ref": "#/definitions/formDataParameterSubSchema"
                  },
                  {
                    "$ref": "#/definitions/queryParameterSubSchema"
                  },
                  {
                    "$ref": "#/definitions/pathParameterSubSchema"
                  }
                ]
              },
              "parameter": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/bodyParameter"
                  },
                  {
                    "$ref": "#/definitions/nonBodyParameter"
                  }
                ]
              },
              "schema": {
                "type": "object",
                "description": "A deterministic version of a JSON Schema object.",
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "properties": {
                  "$ref": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "title": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/title"
                  },
                  "description": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/description"
                  },
                  "default": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/default"
                  },
                  "multipleOf": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/multipleOf"
                  },
                  "maximum": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
                  },
                  "minLength": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
                  },
                  "pattern": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/pattern"
                  },
                  "maxItems": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
                  },
                  "minItems": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
                  },
                  "uniqueItems": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/uniqueItems"
                  },
                  "maxProperties": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
                  },
                  "minProperties": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
                  },
                  "required": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/stringArray"
                  },
                  "enum": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/enum"
                  },
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/schema"
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "default": {}
                  },
                  "type": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/type"
                  },
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/schema"
                      },
                      {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "$ref": "#/definitions/schema"
                        }
                      }
                    ],
                    "default": {}
                  },
                  "allOf": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "$ref": "#/definitions/schema"
                    }
                  },
                  "oneOf": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "$ref": "#/definitions/schema"
                    }
                  },
                  "anyOf": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "$ref": "#/definitions/schema"
                    }
                  },
                  "properties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/schema"
                    },
                    "default": {}
                  },
                  "discriminator": {
                    "type": "string"
                  },
                  "readOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "xml": {
                    "$ref": "#/definitions/xml"
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/externalDocs"
                  },
                  "example": {}
                },
                "additionalProperties": false
              },
              "fileSchema": {
                "type": "object",
                "description": "A deterministic version of a JSON Schema object.",
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                },
                "required": ["type"],
                "properties": {
                  "format": {
                    "type": "string"
                  },
                  "title": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/title"
                  },
                  "description": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/description"
                  },
                  "default": {
                    "$ref": "http://json-schema.org/draft-04/schema#/properties/default"
                  },
                  "required": {
                    "$ref": "http://json-schema.org/draft-04/schema#/definitions/stringArray"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["file"]
                  },
                  "readOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/externalDocs"
                  },
                  "example": {}
                },
                "additionalProperties": false
              },
              "primitivesItems": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["string", "number", "integer", "boolean", "array"]
                  },
                  "format": {
                    "type": "string"
                  },
                  "items": {
                    "$ref": "#/definitions/primitivesItems"
                  },
                  "collectionFormat": {
                    "$ref": "#/definitions/collectionFormat"
                  },
                  "default": {
                    "$ref": "#/definitions/default"
                  },
                  "maximum": {
                    "$ref": "#/definitions/maximum"
                  },
                  "exclusiveMaximum": {
                    "$ref": "#/definitions/exclusiveMaximum"
                  },
                  "minimum": {
                    "$ref": "#/definitions/minimum"
                  },
                  "exclusiveMinimum": {
                    "$ref": "#/definitions/exclusiveMinimum"
                  },
                  "maxLength": {
                    "$ref": "#/definitions/maxLength"
                  },
                  "minLength": {
                    "$ref": "#/definitions/minLength"
                  },
                  "pattern": {
                    "$ref": "#/definitions/pattern"
                  },
                  "maxItems": {
                    "$ref": "#/definitions/maxItems"
                  },
                  "minItems": {
                    "$ref": "#/definitions/minItems"
                  },
                  "uniqueItems": {
                    "$ref": "#/definitions/uniqueItems"
                  },
                  "enum": {
                    "$ref": "#/definitions/enum"
                  },
                  "multipleOf": {
                    "$ref": "#/definitions/multipleOf"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/securityRequirement"
                },
                "uniqueItems": true
              },
              "securityRequirement": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "uniqueItems": true
                }
              },
              "xml": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "attribute": {
                    "type": "boolean",
                    "default": false
                  },
                  "wrapped": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "tag": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/externalDocs"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "securityDefinitions": {
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/basicAuthenticationSecurity"
                    },
                    {
                      "$ref": "#/definitions/apiKeySecurity"
                    },
                    {
                      "$ref": "#/definitions/oauth2ImplicitSecurity"
                    },
                    {
                      "$ref": "#/definitions/oauth2PasswordSecurity"
                    },
                    {
                      "$ref": "#/definitions/oauth2ApplicationSecurity"
                    },
                    {
                      "$ref": "#/definitions/oauth2AccessCodeSecurity"
                    }
                  ]
                }
              },
              "basicAuthenticationSecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["basic"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "apiKeySecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "name", "in"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["apiKey"]
                  },
                  "name": {
                    "type": "string"
                  },
                  "in": {
                    "type": "string",
                    "enum": ["header", "query"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "oauth2ImplicitSecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "flow", "authorizationUrl"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["oauth2"]
                  },
                  "flow": {
                    "type": "string",
                    "enum": ["implicit"]
                  },
                  "scopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                  },
                  "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "oauth2PasswordSecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "flow", "tokenUrl"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["oauth2"]
                  },
                  "flow": {
                    "type": "string",
                    "enum": ["password"]
                  },
                  "scopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                  },
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "oauth2ApplicationSecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "flow", "tokenUrl"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["oauth2"]
                  },
                  "flow": {
                    "type": "string",
                    "enum": ["application"]
                  },
                  "scopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                  },
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "oauth2AccessCodeSecurity": {
                "type": "object",
                "additionalProperties": false,
                "required": ["type", "flow", "authorizationUrl", "tokenUrl"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["oauth2"]
                  },
                  "flow": {
                    "type": "string",
                    "enum": ["accessCode"]
                  },
                  "scopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                  },
                  "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {
                    "$ref": "#/definitions/vendorExtension"
                  }
                }
              },
              "oauth2Scopes": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "mediaTypeList": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/mimeType"
                },
                "uniqueItems": true
              },
              "parametersList": {
                "type": "array",
                "description": "The parameters needed to send a valid API call.",
                "additionalItems": false,
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/parameter"
                    },
                    {
                      "$ref": "#/definitions/jsonReference"
                    }
                  ]
                },
                "uniqueItems": true
              },
              "schemesList": {
                "type": "array",
                "description": "The transfer protocol of the API.",
                "items": {
                  "type": "string",
                  "enum": ["http", "https", "ws", "wss"]
                },
                "uniqueItems": true
              },
              "collectionFormat": {
                "type": "string",
                "enum": ["csv", "ssv", "tsv", "pipes"],
                "default": "csv"
              },
              "collectionFormatWithMulti": {
                "type": "string",
                "enum": ["csv", "ssv", "tsv", "pipes", "multi"],
                "default": "csv"
              },
              "title": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/title"
              },
              "description": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/description"
              },
              "default": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/default"
              },
              "multipleOf": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "maximum": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/maximum"
              },
              "exclusiveMaximum": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum"
              },
              "minimum": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/minimum"
              },
              "exclusiveMinimum": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum"
              },
              "maxLength": {
                "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
              },
              "minLength": {
                "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
              },
              "pattern": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/pattern"
              },
              "maxItems": {
                "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
              },
              "minItems": {
                "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
              },
              "uniqueItems": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/uniqueItems"
              },
              "enum": {
                "$ref": "http://json-schema.org/draft-04/schema#/properties/enum"
              },
              "jsonReference": {
                "type": "object",
                "required": ["$ref"],
                "additionalProperties": false,
                "properties": {
                  "$ref": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "oas2-unused-definition": {
      "description": "Potentially unused definition has been detected.",
      "recommended": true,
      "resolved": false,
      "formats": ["oas2"],
      "type": "style",
      "given": "$.definitions",
      "then": {
        "function": "unreferencedReusableObject",
        "functionOptions": {
          "reusableObjectsLocation": "#/definitions"
        }
      }
    },
    "oas3-api-servers": {
      "description": "OpenAPI `servers` must be present and non-empty array.",
      "recommended": true,
      "formats": ["oas3"],
      "type": "style",
      "given": "$",
      "then": {
        "field": "servers",
        "function": "schema",
        "functionOptions": {
          "dialect": "draft7",
          "schema": {
            "items": {
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          }
        }
      }
    },
    "oas3-examples-value-or-externalValue": {
      "description": "Examples should have either a `value` or `externalValue` field.",
      "recommended": true,
      "formats": ["oas3"],
      "type": "style",
      "given": [
        "$.components.examples[*]",
        "$.paths[*][*]..content[*].examples[*]",
        "$.paths[*][*]..parameters[*].examples[*]",
        "$.components.parameters[*].examples[*]",
        "$.paths[*][*]..headers[*].examples[*]",
        "$.components.headers[*].examples[*]"
      ],
      "then": {
        "function": "xor",
        "functionOptions": {
          "properties": ["externalValue", "value"]
        }
      }
    },
    "oas3-operation-security-defined": {
      "description": "Operation `security` values must match a scheme defined in the `components.securitySchemes` object.",
      "recommended": true,
      "formats": ["oas3"],
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasOpSecurityDefined",
        "functionOptions": {
          "schemesPath": ["components", "securitySchemes"]
        }
      }
    },
    "oas3-parameter-description": {
      "description": "Parameter objects should have a `description`.",
      "recommended": false,
      "formats": ["oas3"],
      "type": "style",
      "given": "$..[?(@parentProperty !== 'links' && @.parameters)]['parameters'].[?(@.in)]",
      "then": {
        "field": "description",
        "function": "truthy"
      }
    },
    "oas3-server-not-example.com": {
      "description": "Server URL should not point at example.com.",
      "recommended": false,
      "formats": ["oas3"],
      "type": "style",
      "given": "$.servers[*].url",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "example\\.com"
        }
      }
    },
    "oas3-server-trailing-slash": {
      "description": "Server URL should not have a trailing slash.",
      "recommended": true,
      "formats": ["oas3"],
      "type": "style",
      "given": "$.servers[*].url",
      "then": {
        "function": "pattern",
        "functionOptions": {
          "notMatch": "./$"
        }
      }
    },
    "oas3-valid-media-example": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "recommended": true,
      "severity": 0,
      "formats": ["oas3"],
      "type": "validation",
      "given": [
        "$..content..[?(@.schema && (@.example !== void 0 || @.examples))]",
        "$..headers..[?(@.schema && (@.example !== void 0 || @.examples))]",
        "$..parameters..[?(@.schema && (@.example !== void 0 || @.examples))]"
      ],
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "schemaField": "schema",
          "oasVersion": 3,
          "type": "media"
        }
      }
    },
    "oas3-valid-schema-example": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "severity": 0,
      "formats": ["oas3"],
      "recommended": true,
      "type": "validation",
      "given": [
        "$.components.schemas..[?(@property !== 'properties' && (@.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]",
        "$..content..[?(@property !== 'properties' && (@.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]",
        "$..headers..[?(@property !== 'properties' && (@.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]",
        "$..parameters..[?(@property !== 'properties' && (@.example !== void 0 || @.default !== void 0) && (@.enum || @.type || @.format || @.$ref || @.properties || @.items))]"
      ],
      "then": {
        "function": "oasExample",
        "functionOptions": {
          "schemaField": "$",
          "oasVersion": 3,
          "type": "schema"
        }
      }
    },
    "oas3-schema": {
      "description": "Validate structure of OpenAPI v3 specification.",
      "message": "{{error}}.",
      "severity": 0,
      "formats": ["oas3"],
      "recommended": true,
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasDocumentSchema",
        "functionOptions": {
          "allErrors": true,
          "schema": {
            "$id": "https://spec.openapis.org/oas/3.0/schema/2019-04-02",
            "$schema": "http://json-schema.org/draft-07/schema#",
            "description": "Validation schema for OpenAPI Specification 3.0.X.",
            "type": "object",
            "required": ["openapi", "info", "paths"],
            "properties": {
              "openapi": {
                "type": "string",
                "pattern": "^3\\.0\\.\\d(-.+)?$"
              },
              "info": {
                "$ref": "#/definitions/Info"
              },
              "externalDocs": {
                "$ref": "#/definitions/ExternalDocumentation"
              },
              "servers": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Server"
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/SecurityRequirement"
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Tag"
                },
                "uniqueItems": true
              },
              "paths": {
                "$ref": "#/definitions/Paths"
              },
              "components": {
                "$ref": "#/definitions/Components"
              }
            },
            "patternProperties": {
              "^x-": {}
            },
            "additionalProperties": false,
            "definitions": {
              "Reference": {
                "type": "object",
                "required": ["$ref"],
                "patternProperties": {
                  "^\\$ref$": {
                    "type": "string",
                    "format": "uri-reference"
                  }
                }
              },
              "Info": {
                "type": "object",
                "required": ["title", "version"],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "termsOfService": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "contact": {
                    "$ref": "#/definitions/Contact"
                  },
                  "license": {
                    "$ref": "#/definitions/License"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Contact": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "License": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri-reference"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Server": {
                "type": "object",
                "required": ["url"],
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "variables": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ServerVariable"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "ServerVariable": {
                "type": "object",
                "required": ["default"],
                "properties": {
                  "enum": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "default": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Components": {
                "type": "object",
                "properties": {
                  "schemas": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Schema"
                          },
                          {
                            "$ref": "#/definitions/Reference"
                          }
                        ]
                      }
                    }
                  },
                  "responses": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Response"
                          }
                        ]
                      }
                    }
                  },
                  "parameters": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Parameter"
                          }
                        ]
                      }
                    }
                  },
                  "examples": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Example"
                          }
                        ]
                      }
                    }
                  },
                  "requestBodies": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/RequestBody"
                          }
                        ]
                      }
                    }
                  },
                  "headers": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Header"
                          }
                        ]
                      }
                    }
                  },
                  "securitySchemes": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/SecurityScheme"
                          }
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Link"
                          }
                        ]
                      }
                    }
                  },
                  "callbacks": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z0-9\\.\\-_]+$": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/Reference"
                          },
                          {
                            "$ref": "#/definitions/Callback"
                          }
                        ]
                      }
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "maximum": {
                    "type": "number"
                  },
                  "exclusiveMaximum": {
                    "type": "boolean",
                    "default": false
                  },
                  "minimum": {
                    "type": "number"
                  },
                  "exclusiveMinimum": {
                    "type": "boolean",
                    "default": false
                  },
                  "maxLength": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minLength": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                  },
                  "pattern": {
                    "type": "string",
                    "format": "regex"
                  },
                  "maxItems": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minItems": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                  },
                  "uniqueItems": {
                    "type": "boolean",
                    "default": false
                  },
                  "maxProperties": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "minProperties": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                  },
                  "required": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                  },
                  "enum": {
                    "type": "array",
                    "items": {},
                    "minItems": 1,
                    "uniqueItems": false
                  },
                  "type": {
                    "type": "string",
                    "enum": ["array", "boolean", "integer", "number", "object", "string"]
                  },
                  "not": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "allOf": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Schema"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "oneOf": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Schema"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "anyOf": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Schema"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "properties": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Schema"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "additionalProperties": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "default": true
                  },
                  "description": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  },
                  "default": {},
                  "nullable": {
                    "type": "boolean",
                    "default": false
                  },
                  "discriminator": {
                    "$ref": "#/definitions/Discriminator"
                  },
                  "readOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "writeOnly": {
                    "type": "boolean",
                    "default": false
                  },
                  "example": {},
                  "externalDocs": {
                    "$ref": "#/definitions/ExternalDocumentation"
                  },
                  "deprecated": {
                    "type": "boolean",
                    "default": false
                  },
                  "xml": {
                    "$ref": "#/definitions/XML"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Discriminator": {
                "type": "object",
                "required": ["propertyName"],
                "properties": {
                  "propertyName": {
                    "type": "string"
                  },
                  "mapping": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "XML": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string",
                    "format": "uri"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "attribute": {
                    "type": "boolean",
                    "default": false
                  },
                  "wrapped": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Response": {
                "type": "object",
                "required": ["description"],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Header"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "content": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/MediaType"
                    }
                  },
                  "links": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Link"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "MediaType": {
                "type": "object",
                "properties": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "example": {},
                  "examples": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Example"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "encoding": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/Encoding"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false,
                "allOf": [
                  {
                    "$ref": "#/definitions/ExampleXORExamples"
                  }
                ]
              },
              "Example": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {},
                  "externalValue": {
                    "type": "string",
                    "format": "uri-reference"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Header": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  },
                  "deprecated": {
                    "type": "boolean",
                    "default": false
                  },
                  "allowEmptyValue": {
                    "type": "boolean",
                    "default": false
                  },
                  "style": {
                    "type": "string",
                    "enum": ["simple"],
                    "default": "simple"
                  },
                  "explode": {
                    "type": "boolean"
                  },
                  "allowReserved": {
                    "type": "boolean",
                    "default": false
                  },
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "content": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/MediaType"
                    },
                    "minProperties": 1,
                    "maxProperties": 1
                  },
                  "example": {},
                  "examples": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Example"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false,
                "allOf": [
                  {
                    "$ref": "#/definitions/ExampleXORExamples"
                  },
                  {
                    "$ref": "#/definitions/SchemaXORContent"
                  }
                ]
              },
              "Paths": {
                "type": "object",
                "patternProperties": {
                  "^\\/": {
                    "$ref": "#/definitions/PathItem"
                  },
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "PathItem": {
                "type": "object",
                "properties": {
                  "$ref": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "servers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Server"
                    }
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Parameter"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    },
                    "uniqueItems": true
                  }
                },
                "patternProperties": {
                  "^(get|put|post|delete|options|head|patch|trace)$": {
                    "$ref": "#/definitions/Operation"
                  },
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Operation": {
                "type": "object",
                "required": ["responses"],
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "summary": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/ExternalDocumentation"
                  },
                  "operationId": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Parameter"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    },
                    "uniqueItems": true
                  },
                  "requestBody": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/RequestBody"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "responses": {
                    "$ref": "#/definitions/Responses"
                  },
                  "callbacks": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Callback"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  },
                  "deprecated": {
                    "type": "boolean",
                    "default": false
                  },
                  "security": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SecurityRequirement"
                    }
                  },
                  "servers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Server"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Responses": {
                "type": "object",
                "properties": {
                  "default": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Response"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  }
                },
                "patternProperties": {
                  "^[1-5](?:\\d{2}|XX)$": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Response"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "^x-": {}
                },
                "minProperties": 1,
                "additionalProperties": false
              },
              "SecurityRequirement": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "Tag": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalDocs": {
                    "$ref": "#/definitions/ExternalDocumentation"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "ExternalDocumentation": {
                "type": "object",
                "required": ["url"],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri-reference"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "ExampleXORExamples": {
                "description": "Example and examples are mutually exclusive",
                "not": {
                  "required": ["example", "examples"]
                }
              },
              "SchemaXORContent": {
                "description": "Schema and content are mutually exclusive, at least one is required",
                "not": {
                  "required": ["schema", "content"]
                },
                "oneOf": [
                  {
                    "required": ["schema"]
                  },
                  {
                    "required": ["content"],
                    "description": "Some properties are not allowed if content is present",
                    "allOf": [
                      {
                        "not": {
                          "required": ["style"]
                        }
                      },
                      {
                        "not": {
                          "required": ["explode"]
                        }
                      },
                      {
                        "not": {
                          "required": ["allowReserved"]
                        }
                      },
                      {
                        "not": {
                          "required": ["example"]
                        }
                      },
                      {
                        "not": {
                          "required": ["examples"]
                        }
                      }
                    ]
                  }
                ]
              },
              "Parameter": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "in": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  },
                  "deprecated": {
                    "type": "boolean",
                    "default": false
                  },
                  "allowEmptyValue": {
                    "type": "boolean",
                    "default": false
                  },
                  "style": {
                    "type": "string"
                  },
                  "explode": {
                    "type": "boolean"
                  },
                  "allowReserved": {
                    "type": "boolean",
                    "default": false
                  },
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/definitions/Schema"
                      },
                      {
                        "$ref": "#/definitions/Reference"
                      }
                    ]
                  },
                  "content": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/MediaType"
                    },
                    "minProperties": 1,
                    "maxProperties": 1
                  },
                  "example": {},
                  "examples": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Example"
                        },
                        {
                          "$ref": "#/definitions/Reference"
                        }
                      ]
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false,
                "required": ["name", "in"],
                "allOf": [
                  {
                    "$ref": "#/definitions/ExampleXORExamples"
                  },
                  {
                    "$ref": "#/definitions/SchemaXORContent"
                  },
                  {
                    "$ref": "#/definitions/ParameterLocation"
                  }
                ]
              },
              "ParameterLocation": {
                "description": "Parameter location",
                "oneOf": [
                  {
                    "description": "Parameter in path",
                    "required": ["required"],
                    "properties": {
                      "in": {
                        "enum": ["path"]
                      },
                      "style": {
                        "enum": ["matrix", "label", "simple"],
                        "default": "simple"
                      },
                      "required": {
                        "enum": [true]
                      }
                    }
                  },
                  {
                    "description": "Parameter in query",
                    "properties": {
                      "in": {
                        "enum": ["query"]
                      },
                      "style": {
                        "enum": ["form", "spaceDelimited", "pipeDelimited", "deepObject"],
                        "default": "form"
                      }
                    }
                  },
                  {
                    "description": "Parameter in header",
                    "properties": {
                      "in": {
                        "enum": ["header"]
                      },
                      "style": {
                        "enum": ["simple"],
                        "default": "simple"
                      }
                    }
                  },
                  {
                    "description": "Parameter in cookie",
                    "properties": {
                      "in": {
                        "enum": ["cookie"]
                      },
                      "style": {
                        "enum": ["form"],
                        "default": "form"
                      }
                    }
                  }
                ]
              },
              "RequestBody": {
                "type": "object",
                "required": ["content"],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "content": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/MediaType"
                    }
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "SecurityScheme": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/APIKeySecurityScheme"
                  },
                  {
                    "$ref": "#/definitions/HTTPSecurityScheme"
                  },
                  {
                    "$ref": "#/definitions/OAuth2SecurityScheme"
                  },
                  {
                    "$ref": "#/definitions/OpenIdConnectSecurityScheme"
                  }
                ]
              },
              "APIKeySecurityScheme": {
                "type": "object",
                "required": ["type", "name", "in"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["apiKey"]
                  },
                  "name": {
                    "type": "string"
                  },
                  "in": {
                    "type": "string",
                    "enum": ["header", "query", "cookie"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "HTTPSecurityScheme": {
                "type": "object",
                "required": ["scheme", "type"],
                "properties": {
                  "scheme": {
                    "type": "string"
                  },
                  "bearerFormat": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["http"]
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false,
                "oneOf": [
                  {
                    "description": "Bearer",
                    "properties": {
                      "scheme": {
                        "enum": ["bearer"]
                      }
                    }
                  },
                  {
                    "description": "Non Bearer",
                    "not": {
                      "required": ["bearerFormat"]
                    },
                    "properties": {
                      "scheme": {
                        "not": {
                          "enum": ["bearer"]
                        }
                      }
                    }
                  }
                ]
              },
              "OAuth2SecurityScheme": {
                "type": "object",
                "required": ["type", "flows"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["oauth2"]
                  },
                  "flows": {
                    "$ref": "#/definitions/OAuthFlows"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "OpenIdConnectSecurityScheme": {
                "type": "object",
                "required": ["type", "openIdConnectUrl"],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["openIdConnect"]
                  },
                  "openIdConnectUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "OAuthFlows": {
                "type": "object",
                "properties": {
                  "implicit": {
                    "$ref": "#/definitions/ImplicitOAuthFlow"
                  },
                  "password": {
                    "$ref": "#/definitions/PasswordOAuthFlow"
                  },
                  "clientCredentials": {
                    "$ref": "#/definitions/ClientCredentialsFlow"
                  },
                  "authorizationCode": {
                    "$ref": "#/definitions/AuthorizationCodeOAuthFlow"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "ImplicitOAuthFlow": {
                "type": "object",
                "required": ["authorizationUrl", "scopes"],
                "properties": {
                  "authorizationUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "PasswordOAuthFlow": {
                "type": "object",
                "required": ["tokenUrl"],
                "properties": {
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "ClientCredentialsFlow": {
                "type": "object",
                "required": ["tokenUrl"],
                "properties": {
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "AuthorizationCodeOAuthFlow": {
                "type": "object",
                "required": ["authorizationUrl", "tokenUrl"],
                "properties": {
                  "authorizationUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "scopes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false
              },
              "Link": {
                "type": "object",
                "properties": {
                  "operationId": {
                    "type": "string"
                  },
                  "operationRef": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "parameters": {
                    "type": "object",
                    "additionalProperties": {}
                  },
                  "requestBody": {},
                  "description": {
                    "type": "string"
                  },
                  "server": {
                    "$ref": "#/definitions/Server"
                  }
                },
                "patternProperties": {
                  "^x-": {}
                },
                "additionalProperties": false,
                "not": {
                  "description": "Operation Id and Operation Ref are mutually exclusive",
                  "required": ["operationId", "operationRef"]
                }
              },
              "Callback": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/PathItem"
                },
                "patternProperties": {
                  "^x-": {}
                }
              },
              "Encoding": {
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/Header"
                    }
                  },
                  "style": {
                    "type": "string",
                    "enum": ["form", "spaceDelimited", "pipeDelimited", "deepObject"]
                  },
                  "explode": {
                    "type": "boolean"
                  },
                  "allowReserved": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "oas3-unused-component": {
      "description": "Potentially unused component has been detected.",
      "recommended": true,
      "formats": ["oas3"],
      "type": "style",
      "resolved": false,
      "given": "$",
      "then": {
        "function": "oasUnusedComponent"
      }
    }
  }
}
